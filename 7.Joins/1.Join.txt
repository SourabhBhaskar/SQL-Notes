Introduction to SQL JOIN Clause
-------------------------------
    * The SQL JOIN clause is used to combine data from two or more tables in a database.
    It is particularly useful when related data is stored across multiple tables.
    
    * Join-Predicate
        - The join-predicate specifies the columns on which records from two or more tables are joined.
        - This predicate is specified with the ON clause and uses various comparison operators such as <, >, <>, <=, >=, !=, BETWEEN, LIKE, and NOT, etc.
        - Multiple join predicates can be connected with logical operators AND, OR, and NOT.
    
    * Usage of JOINs
        - JOINs can be used along with update and delete SQL queries to update and delete records from across multiple tables.
        - When using joins to retrieve a table, the resultant table displayed is not stored anywhere in the database.
        - Basic Syntax:
            SELECT column_name(s)
            FROM table1
            JOIN table2 ON table1.column_name = table2.column_name;

    * Types of Joins
        - Inner Join : Retrieves the intersection of two tables, comparing each row from the first table with each row from the second table.
        - Outer Join   : Retrieves all records in two tables, even if there is no counterpart row in the other table.

        - Subtypes
            - Left Join  : Returns all rows from the left table, even if there are no matches in the right table.
            - Right Join : Returns all rows from the right table, even if there are no matches in the left table.
            - Full Join  : Returns rows when there is a match in one of the tables.
            - Other Joins:
                - Self Join : Used to join a table to itself, treating it as if it were two tables with temporary renaming.
                - CROSS Join: Returns the Cartesian product of the sets of records from two or more joined tables.