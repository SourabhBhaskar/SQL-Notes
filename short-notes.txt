
CREATE DATABASE testDB : Creates a new database named "testDB."
DROP DATABASE testDB   : Deletes a database
SHOW DATABASES         : Retrieves list of all available databases.
USE testDB             : Sets the active or current database context to "testDB"




Operators & clause
------------------

    1. WHERE
        - Used to filter records based on specified conditions.
        SELECT name FROM customers WHERE salary > 2000

    2. TOP
        - Retrieves a specific number of rows from the beginning of a result set.
        SELECT TOP 4 FROM customers

    3. LIMIT
        - Limits the number of rows returned in a result set.
        SELECT * FROM customers LIMIT 4

    4. DISTINCT
        - Retrieves unique values from a specified column.
        SELECT DISTINCT salary FROM customers

    5. ORDER BY
        - Sorts the result set based on specified columns and order (ASC or DESC).
        SELECT * FROM CUSTOMERS ORDER BY NAME ASC

    6. GROUP BY
        - Groups rows that have the same values in specified columns, often used with aggregate functions.
        SELECT salary, COUNT(name) FROM customers GROUP BY salary

    7. HAVING:
        - Filters the results of a GROUP BY based on specified conditions.
        SELECT address, age, COUNT(address) as count FROM customers GROUP BY address, age HAVING count >= 1

    8. OR
        - Retrieves records where at least one of the specified conditions is true.
        SELECT ID, NAME, SALARY FROM CUSTOMERS WHERE SALARY > 2000 OR AGE < 25

    9. AND
        - Retrieves records where all of the specified conditions are true.
        SELECT ID, NAME, SALARY FROM CUSTOMERS WHERE SALARY > 2000 AND AGE < 25

    10. BOOLEAN/BIT
        - Represents true or false values.
        SELECT * FROM CARS WHERE IsRed = TRUE or SELECT * FROM CARS WHERE IsRed = 1

    11. LIKE
        - Searches for a specified pattern in a column.
        SELECT * FROM CUSTOMERS WHERE SALARY LIKE '200%'

    12. IN
        - Specifies multiple values for a WHERE clause.
        SELECT * FROM CUSTOMERS WHERE NAME IN ('Khilan', 'Hardik', 'Muffy')

    13. ANY
        - Compares a value to any value in a subquery.
        WHERE SALARY > ANY (SELECT SALARY FROM CUSTOMERS WHERE AGE = 32)

    14. ALL
        - Compares a value to all values in a subquery.
        WHERE SALARY > ALL (SELECT SALARY FROM CUSTOMERS WHERE AGE = 32)

    15. EXISTS
        - Tests for the existence of any record in a subquery.
        SELECT * FROM CUSTOMERS WHERE EXISTS (SELECT PRICE FROM CARS WHERE CARS.ID = CUSTOMERS.ID AND PRICE > 2000000)

    16. CASE
        - Performs conditional logic within a query.
        SELECT *, CASE WHEN SALARY < 4500 THEN (SALARY + SALARY * 25/100) END AS INCREMENT FROM CUSTOMERS

    17. NOT
        - Negates a condition in a WHERE clause.
        SELECT * FROM CUSTOMERS WHERE NOT (SALARY > 2000.00)

    18. <>/!=
        - Checks for inequality between two values.
        SELECT * FROM CUSTOMERS WHERE NAME <> 'Ramesh'

    19. IS NULL
        - Filters records where a specified column is NULL.
        SELECT * FROM CUSTOMERS WHERE ADDRESS IS NULL

    20. IS NOT NULL
        - Filters records where a specified column is not NULL.
        SELECT * FROM CUSTOMERS WHERE ADDRESS IS NOT NULL

    21. BETWEEN
        - Retrieves data within a specified range (inclusive).
        SELECT * FROM CUSTOMERS WHERE AGE BETWEEN 20 AND 25